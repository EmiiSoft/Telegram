const API_SERVER_URL = 'https://emistore.vercel.app/'; // Ganti dengan URL server Anda

async function sendOrderToBotAPI(orderData) {
    try {
        console.log('üì§ Mengirim pesanan...');
        
        const response = await fetch(`${API_SERVER_URL}/api/orders`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(orderData)
        });

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ Pesanan terkirim');
            return { success: true, message: result.message, trxId: result.trxId };
        } else {
            console.error('‚ùå Error:', result.message);
            return { success: false, message: result.message };
        }
    } catch (error) {
        console.error('‚ùå Error:', error);
        return { success: false, message: 'Gagal terhubung ke server' };
    }
}

async function getAllOrders() {
    try {
        const response = await fetch(`${API_SERVER_URL}/api/orders`);
        const result = await response.json();
        return result.success ? result.orders : [];
    } catch (error) {
        return [];
    }
}

async function searchOrder(trxId) {
    try {
        const response = await fetch(`${API_SERVER_URL}/api/orders/${trxId}`);
        const result = await response.json();
        return result.success ? result.order : null;
    } catch (error) {
        return null;
    }
}

async function getStatistics() {
    try {
        const response = await fetch(`${API_SERVER_URL}/api/stats`);
        const result = await response.json();
        return result.success ? result.stats : null;
    } catch (error) {
        return null;
    }
}

async function testConnection() {
    try {
        const response = await fetch(`${API_SERVER_URL}/api/health`);
        const result = await response.json();
        return result.status === 'ok';
    } catch (error) {
        return false;
    }
}

function formatRupiah(amount) {
    return new Intl.NumberFormat('id-ID', {
        style: 'currency',
        currency: 'IDR'
    }).format(amount);
}

// Export untuk Node.js
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        sendOrderToBotAPI,
        getAllOrders,
        searchOrder,
        getStatistics,
        testConnection,
        formatRupiah
    };
}
